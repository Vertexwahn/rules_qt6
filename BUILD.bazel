load("@rules_qt//:qt_libraries.bzl", "QT_LIBRARIES")
load("@rules_qt//:qt_installer.bzl", "qt_installer")

# Generate qt_modules.bzl for Windows
qt_installer(
    name = "qt_modules_windows",
    os = "windows",
    target_sdk = "desktop",
    version = "6.4.0",
    bzl_out = "qt_modules.bzl",
    modules = [],
)

config_setting(
    name = "osx_arm64",
    constraint_values = [
        "@platforms//os:osx",
        "@platforms//cpu:aarch64",
    ],
)

config_setting(
    name = "osx_x86_64",
    constraint_values = [
        "@platforms//os:osx",
        "@platforms//cpu:x86_64",
    ],
)

[
    cc_library(
        name = "qt_%s" % name,
        visibility = ["//visibility:public"],
        deps = dependencies + select({
            "@platforms//os:linux": ["@qt_linux_x86_64//:qt_%s_linux" % name],
            ":osx_x86_64": ["@qt_mac_aarch64//:qt_%s_mac" % name],
            ":osx_arm64": ["@qt_mac_aarch64//:qt_%s_mac" % name],
            "@platforms//os:windows": ["@qt_windows_x86_64//:qt_%s_windows" % name],
        }),
    )
    for name, _, _, dependencies in QT_LIBRARIES
]

cc_library(
    name = "qt_hdrs",
    visibility = ["//visibility:public"],
    deps = select({
        "@platforms//os:linux": ["@qt_linux_x86_64//:qt_hdrs"],
        ":osx_x86_64": ["@qt_mac_aarch64//:qt_hdrs"],
        ":osx_arm64": ["@qt_mac_aarch64//:qt_hdrs"],
        "@platforms//os:windows": ["@qt_windows_x86_64//:qt_hdrs"],
    }),
)

all_qt_libs = [":qt_%s" % name for name, _, _, _ in QT_LIBRARIES]

cc_library(
    name = "qt",
    visibility = ["//visibility:public"],
    deps = all_qt_libs + [":qt_hdrs"],
)
