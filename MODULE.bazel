module(name = "rules_qt", version = "0.0.3")

bazel_dep(name = "rules_python", version = "0.27.1")
bazel_dep(name = "platforms", version = "0.0.8")
bazel_dep(name = "bazel_skylib", version = "1.4.2")
bazel_dep(name="rules_cc", version = "0.0.9")


# We next initialize the python toolchain using the extension.
# You can set different Python versions in this block.
python = use_extension("@rules_python//python/extensions:python.bzl", "python", dev_dependency=True)
python.toolchain(
    configure_coverage_tool = True,
    # Only set when you have mulitple toolchain versions.
    is_default = True,
    python_version = "3.10",
)

use_repo(python, "python_3_10", "python_versions")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip", dev_dependency=True)
pip.parse(
    hub_name = "pip",
    python_version = "3.10",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pip")

qt = use_extension("//extensions:qt.bzl", "aqt_install")
qt.install(
    name = "qt_linux_x86_64",
    version = "6.4.0",
    os = "linux",
    type = "desktop",
    build_file = "//:qt_linux_x86_64.BUILD",
)
qt.install(
    name = "qt_mac_aarch64",
    version = "6.4.0",
    os = "mac",
    type = "desktop",
    build_file = "//:qt_mac_aarch64.BUILD",
)
qt.install(
    name = "qt_mac_x86_64",
    version = "6.4.0",
    os = "mac",
    type = "desktop",
    build_file = "//:qt_mac_x86_64.BUILD",
)

qt.install(
    name = "qt_windows_x86_64",
    version = "6.4.0",
    os = "windows",
    type = "desktop",
    windows_architecture = "win64_mingw",
    build_file = "//:qt_windows_x86_64.BUILD",
)
use_repo(qt, "qt_linux_x86_64", "qt_mac_x86_64", "qt_mac_aarch64", "qt_windows_x86_64")
register_toolchains("//tools:qt_linux_toolchain")
